{"ast":null,"code":"var _jsxFileName = \"/Users/mr.hern/Desktop/front-end/react-frontend/src/Components/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport { getNodeText, getRoles } from \"@testing-library/dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Res = \"http://localhost:5000/restaurant/\";\nexport default function Home() {\n  _s();\n\n  const [post, setPost] = useState(null);\n  console.log(post); // const [name, setName] = useState('');\n  //   console.log(post);   THIS IS THE WORKING ONE\n\n  useEffect(() => {\n    axios.get(Res).then(response => {\n      setPost(response.data.restaurants); //   setName(response)\n    });\n  }, []);\n\n  const getRes = name => {\n    console.log(name);\n    axios.get(`${Res}/${name}`).then(response => {\n      console.log(response);\n      localStorage.setItem(\"restourantData\", JSON.stringify(response.data));\n    });\n  };\n\n  function goRes() {\n    window.location.href(\"/reviews\");\n  }\n\n  ;\n  if (!post) return null;\n  console.log(post);\n  const currentReviews = post[0].reviews.map((rest, id) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [rest.username, rest.review]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this));\n  const currentRests = post.map((rest, id) => /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: /*#__PURE__*/_jsxDEV(CardGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: \"holder.js/100px160\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: rest.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: currentReviews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: \"Last updated 3 mins ago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => getRes(rest.name),\n            children: \"Click me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: currentRests\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Home, \"VAK5tdJEk0cqnRsmbvM4YDyoQLs=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mr.hern/Desktop/front-end/react-frontend/src/Components/pages/Home.js"],"names":["axios","React","useState","useEffect","Card","Button","CardGroup","getNodeText","getRoles","Res","Home","post","setPost","console","log","get","then","response","data","restaurants","getRes","name","localStorage","setItem","JSON","stringify","goRes","window","location","href","currentReviews","reviews","map","rest","id","username","review","currentRests"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,sBAAtC;;AAEA,MAAMC,GAAG,GAAG,mCAAZ;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAF6B,CAG7B;AACA;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,KAAK,CAACe,GAAN,CAAUN,GAAV,EAAeO,IAAf,CAAqBC,QAAD,IAAc;AAChCL,MAAAA,OAAO,CAACK,QAAQ,CAACC,IAAT,CAAcC,WAAf,CAAP,CADgC,CAEhC;AAED,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;;AASF,QAAMC,MAAM,GAAIC,IAAD,IAAU;AACrBR,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AAEArB,IAAAA,KAAK,CAACe,GAAN,CAAW,GAAEN,GAAI,IAAGY,IAAK,EAAzB,EAA4BL,IAA5B,CAAkCC,QAAD,IAAc;AAC3CJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AAEAK,MAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCC,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACC,IAAxB,CAAvC;AAGD,KANH;AAOH,GAVD;;AAWA,WAASQ,KAAT,GAAkB;AACdC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqB,UAArB;AACH;;AAAA;AAIC,MAAI,CAAClB,IAAL,EAAW,OAAO,IAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,QAAMmB,cAAc,GAAGnB,IAAI,CAAC,CAAD,CAAJ,CAAQoB,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAOC,EAAP,kBAEzC;AAAA,eAECD,IAAI,CAACE,QAFN,EAGGF,IAAI,CAACG,MAHR;AAAA,KAASF,EAAT;AAAA;AAAA;AAAA;AAAA,UAFqB,CAAvB;AAaA,QAAMG,YAAY,GAAG1B,IAAI,CAACqB,GAAL,CAAS,CAACC,IAAD,EAAOC,EAAP,kBAC5B;AAAA,2BACJ,QAAC,SAAD;AAAA,8BACE,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD,CAAM,GAAN;AAAU,UAAA,OAAO,EAAC,KAAlB;AAAwB,UAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA,sBAAaD,IAAI,CAACZ;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,sBACES;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE,QAAC,IAAD,CAAM,MAAN;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAE,MAAMV,MAAM,CAACa,IAAI,CAACZ,IAAN,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADI,KAASa,EAAT;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AAoCA,sBACI;AAAA,cACDG;AADC;AAAA;AAAA;AAAA;AAAA,UADJ;AAUD;;GA9FuB3B,I;;KAAAA,I","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button';\nimport CardGroup from 'react-bootstrap/CardGroup'\nimport { getNodeText, getRoles } from \"@testing-library/dom\";\n\nconst Res = \"http://localhost:5000/restaurant/\";\n\nexport default function Home() {\n  const [post, setPost] = useState(null);\n  console.log(post);\n  // const [name, setName] = useState('');\n  //   console.log(post);   THIS IS THE WORKING ONE\n\n  useEffect(() => {\n    axios.get(Res).then((response) => {\n      setPost(response.data.restaurants);\n      //   setName(response)\n    \n    });\n  }, []);\n\n\nconst getRes = (name) => {\n    console.log(name)\n\n    axios.get(`${Res}/${name}`).then((response) => {\n        console.log(response)\n      \n        localStorage.setItem(\"restourantData\", JSON.stringify(response.data));\n\n\n      });    \n}\nfunction goRes () {\n    window.location.href(\"/reviews\")\n};\n\n\n\n  if (!post) return null;\n  console.log(post)\n \n  const currentReviews = post[0].reviews.map((rest, id ) => (\n \n    <li key={id}>\n         \n    {rest.username}\n      {rest.review}\n  \n      \n    </li>\n    \n\n  ));\n\n  const currentRests = post.map((rest, id) => (\n    <ul key={id}> \n<CardGroup>\n  <Card>\n    <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n    <Card.Body>\n      <Card.Title>{rest.name}</Card.Title>\n      <Card.Text>\n       {currentReviews}\n      </Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\n      <button onClick={() => getRes(rest.name)}>Click me</button>\n    </Card.Footer>\n  </Card>\n  <Card>\n  </Card>\n</CardGroup>\n     \n      {/* <Card style={{ width: '18rem' }}>\n  <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n  <Card.Body>\n    <Card.Title>{rest.name}</Card.Title>\n    <Card.Text>\n    {currentReviews}\n    </Card.Text>\n    <Button variant=\"primary\">Go somewhere</Button>\n  </Card.Body>\n</Card> */}\n</ul>\n  ));\n\n \n\n\n  return (\n      <ul>\n    {currentRests}\n   \n    </ul>\n      \n      \n   \n   \n  );\n}"]},"metadata":{},"sourceType":"module"}