{"ast":null,"code":"var _jsxFileName = \"/Users/mr.hern/Desktop/front-end/react-frontend/src/Components/pages/Restaurants.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\"; // import Newres from \"./Newres\";\n// import { Component } from \"react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurants() {\n  _s();\n\n  // const [reviewData, setreviewData] = useState([]);\n  const [data, setData] = useState([]); //console.log(data)\n\n  const {\n    restaurantName\n  } = useParams();\n  const [restId, setRestId] = useState(\"\"); //console.log(restId)\n\n  const [reviewData, setReviewData] = useState([]);\n  const [message, setMessage] = useState(\"Not signed in\"); //console.log(reviewData);\n\n  const userData = JSON.parse(localStorage.getItem(\"mytoken\"));\n  useEffect(() => {\n    //console.log(restaurantName);\n    // loadData();\n    axios.get(`http://localhost:5000/restaurant/${restaurantName}`).then(res => {\n      setData(res.data.data);\n      setRestId(res.data.data._id);\n      return axios.get(`http://localhost:5000/review/review/${res.data.data._id}`);\n    }).then(reviewDataFound => {\n      console.log(reviewDataFound);\n      setReviewData(reviewDataFound.data.reviewData);\n    });\n  }, [restaurantName]);\n\n  const check = () => {\n    if (\"mytoken\") {\n      /*#__PURE__*/\n      _jsxDEV(Link, {\n        to: `/reviews/${restId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 4\n      }, this);\n    } else {\n      setMessage(message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"18rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\" // src=\"https://nightlife.ng/wp-content/uploads/2020/08/9540978_bardanfo_jpeg273c8b91416e05bf0daee14b46a8c03e.jpg\"\n        // style={{ width: \"18rem\" }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \" \", data.image, /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [data.name, data._id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), \"Hours \", data.hours, \" a day\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Address: \", data.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Rating \", data.rating, \" stars\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), reviewData.map((review, id) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: review.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: review.review\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/reviews/${restId}`,\n          className: \"btn btn-primary\",\n          children: \"Add/Edit Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Restaurants, \"zIIWZJc31oEoQbXj/TaS7+O9B7I=\", false, function () {\n  return [useParams];\n});\n\n_c = Restaurants;\nexport default Restaurants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"sources":["/Users/mr.hern/Desktop/front-end/react-frontend/src/Components/pages/Restaurants.js"],"names":["axios","React","useState","useEffect","useParams","Card","Button","Link","Restaurants","data","setData","restaurantName","restId","setRestId","reviewData","setReviewData","message","setMessage","userData","JSON","parse","localStorage","getItem","get","then","res","_id","reviewDataFound","console","log","check","width","image","name","hours","location","rating","map","review","id","title"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\n\n\n// import Newres from \"./Newres\";\n// import { Component } from \"react\";\n\nfunction Restaurants() {\n  // const [reviewData, setreviewData] = useState([]);\n  const [data, setData] = useState([]);\n  //console.log(data)\n  const { restaurantName } = useParams();\n  const [restId, setRestId] = useState(\"\");\n  //console.log(restId)\n  const [reviewData, setReviewData] = useState([]);\n  const [message, setMessage] = useState( \"Not signed in\" );\n  //console.log(reviewData);\n  const userData = JSON.parse(localStorage.getItem(\"mytoken\"))\n\n  useEffect(() => {\n    //console.log(restaurantName);\n\n    // loadData();\n\n    axios\n      .get(`http://localhost:5000/restaurant/${restaurantName}`)\n      .then((res) => {\n        setData(res.data.data);\n        setRestId(res.data.data._id);\n        return axios.get(\n          `http://localhost:5000/review/review/${res.data.data._id}`\n        );\n      })\n      .then((reviewDataFound) => {\n        console.log(reviewDataFound);\n        setReviewData(reviewDataFound.data.reviewData);\n      });\n  }, [restaurantName]);\n\n const check = () => {\n  if (\"mytoken\") {\n   <Link to={`/reviews/${restId}`} />\n  } else {\n    setMessage(message);\n  }\n }\n\n  return (\n    <div>\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img\n          variant=\"top\"\n          // src=\"https://nightlife.ng/wp-content/uploads/2020/08/9540978_bardanfo_jpeg273c8b91416e05bf0daee14b46a8c03e.jpg\"\n          // style={{ width: \"18rem\" }}\n        /> {data.image}\n        <Card.Body>\n          <Card.Title></Card.Title>\n          <Card.Text>\n            {data.name}\n            {data._id}\n            <br />\n            Hours {data.hours} a day\n          </Card.Text>\n          <Card.Text>Address: {data.location}</Card.Text>\n          <Card.Text>Rating {data.rating} stars</Card.Text>\n          {reviewData.map((review, id) => {\n        return (\n          <div key={id}>\n            <h3>{review.title}</h3>\n            <h5>{review.review}</h5>\n           \n          </div>\n        );\n      })}\n          {/* {{Newres}}  */}\n          {/* <Button type=\"button\" variant=\"primary\">\n            Add a review?\n          </Button> */}\n          <Link  to={`/reviews/${restId}`} className=\"btn btn-primary\">Add/Edit Review</Link> \n        </Card.Body>\n\n        {/* {reviewData.map((review, id)=>{\n  return (\n    <div>\n    <h3>{review.title}</h3>\n    <h5>{review.review}</h5>\n    <Link to={`/Reviews/${review._id}`}>Edit</Link>\n    </div>\n  )\n})} */}\n      </Card>\n\n    \n    </div>\n  );\n}\nexport default Restaurants;\n"]},"metadata":{},"sourceType":"module"}