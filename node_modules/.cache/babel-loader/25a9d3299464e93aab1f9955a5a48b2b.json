{"ast":null,"code":"var _jsxFileName = \"/Users/mr.hern/Desktop/front-end/react-frontend/src/Components/pages/Reviews.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\"; // import Card from \"react-bootstrap/Card\";\n\nimport Button from \"react-bootstrap/Button\";\nimport { FaStar } from \"react-icons/fa\"; // import { useState } from \"react/cjs/react.development\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = {\n  orange: \"#FFBA5A\",\n  grey: \"#a9a9a9\"\n}; // import Newres from \"./Newres\";\n// import { Component } from \"react\";\n\nfunction Reviews() {\n  _s();\n\n  // const [reviewData, setreviewData] = useState([]);\n  //   const [data, setData] = useState([]);\n  const {\n    restaurantId\n  } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [review, setReview] = useState(\"\"); // const [rating, setRating] = useState(\"\");\n\n  const [revId, setRevId] = useState(\"\");\n  const userData = JSON.parse(localStorage.getItem(\"mytoken\"));\n  const [restaurant, setRestaurant] = useState([]); //  const stars = Array(5).fill(0);\n  //  const [currentValue, setCurrentValue] = useState(0);\n  //  const [hoverValue, setHoverValue] = useState(undefined);\n  //  //DELETE REVIEW\n  //  // const [reviews, setReviews] = useState('');\n  //  const handleClick = (value) => {\n  //    setCurrentValue(value);\n  //  };\n  //  const handleMouseOver = (value) => {\n  //    setHoverValue(value);\n  //  };\n  //  const handleMouseLeave = () => {\n  //    setHoverValue(undefined);\n  //  };\n  // const [restaurantId, setRestaurantId] = useState(\"\")\n  //   const token ='mytoken'\n\n  console.log(revId);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/restaurant/${restaurantId}`).then(res => {\n      setRestaurant(res.data.data);\n    });\n    axios.get(`http://localhost:5000/review/singlereview/${restaurantId}`, {\n      headers: {\n        Authorization: `${userData.token}`\n      }\n    }).then(res => {\n      //Restaurant ID\n      console.log(restaurantId);\n\n      if (res.data.reviewData) {\n        setTitle(res.data.reviewData.title);\n        setReview(res.data.reviewData.review); // setRating(res.data.reviewData.rating);\n\n        setRevId(res.data.reviewData._id); // setRestaurantId(res.data.reviewData[0]._id);\n\n        console.log(res.data.reviewData);\n      } // axios.get(`http://localhost:5000/review/${restaurantId}`).then((res) => { //Restaurant ID\n      // console.log(res);\n      //       if (res) { // review exist\n      //  //   setData(res.data.reviewData[0]);\n      //  setTitle(res.data.reviewData[0].title);\n      //  setReview(res.data.reviewData[0].review);\n      //  setRevId(res.data.reviewData[0]._id);\n      //  // setRestaurantId(res.data.reviewData[0]._id);\n      //    console.log(res.data.reviewData);\n      //       } else {\n      //       //   // review not exist yet\n      //       }\n\n    });\n  }, [restaurantId]);\n\n  const save = () => {\n    //   console.log(data);\n    if (revId) {\n      // review exist\n      const req = {\n        review: review,\n        title: title,\n        restaurantName: restaurant.name // rating: rating\n\n      };\n      axios.put(`http://localhost:5000/review/updateReview/${revId}`, req, {\n        headers: {\n          Authorization: `${userData.token}`\n        }\n      }); //Review ID\n    } else {\n      // review not exist, we are creating one\n      const req = {\n        review: review,\n        title: title,\n        restaurantName: restaurant.name,\n        // rating: rating,\n        restaurantId: restaurantId\n      };\n      axios.post(`http://localhost:5000/review/addNewReview`, req, {\n        headers: {\n          Authorization: `${userData.token}`\n        }\n      });\n    }\n  };\n\n  const deleteReview = () => {\n    axios.delete(`http://localhost:5000/review/delete/${revId}`, {\n      headers: {\n        Authorization: `${userData.token}`\n      }\n    });\n  }; // Todo Message \"hey deleted \" Links to restaurant. \n  // const currentRe = data[0].reviews.map((data, id ) => (\n  //   <li key={id}>\n  //     <h3>{data.review}</h3>\n  //   </li>\n  // ));\n  //   return (\n  //     <div>\n  //       <form>\n  //         <Card style={{ width: \"18rem\" }}>\n  //           <Card.Body>\n  //             <Card.Title>\n  //             </Card.Title>\n  //             <Card.Text>\n  //               {title}\n  //               <br />\n  //               <textarea\n  //                 value={title}\n  //                 onChange={(e) => setTitle(e.target.value)}\n  //               />\n  //             </Card.Text>\n  //             <textarea\n  //               value={review}\n  //               onChange={(e) => setReview(e.target.value)}\n  //             />\n  //             <Button type=\"button\" onClick={save} variant=\"primary\">\n  //               Save Review\n  //             </Button>\n  //             <Button type=\"button\" onClick={deleteReview} className=\"btn-dangerous\" variant=\"primary\">\n  //            Delete Review\n  //             </Button>\n  //           </Card.Body>\n  //         </Card>\n  //       </form>\n  //     </div>\n  //   );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Don't be shy... Leave a review!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: restaurant.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: review,\n      placeholder: \"Review\",\n      onChange: e => setReview(e.target.value),\n      style: styles.textarea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: save,\n      alert: \"Thank you!\",\n      style: styles.button,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: deleteReview,\n      variant: \"dark\",\n      style: styles.button,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Reviews, \"cgAIm+0CoTDxFtvZWCMi9CYjA84=\", false, function () {\n  return [useParams];\n});\n\n_c = Reviews;\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  textarea: {\n    border: \"1px solid #a9a9a9\",\n    borderRadius: 5,\n    width: 300,\n    margin: \"20px 0\",\n    minHeight: 100,\n    padding: 10\n  },\n  button: {\n    border: \"1px solid #a9a9a9\",\n    borderRadius: 5,\n    width: 300,\n    padding: 10\n  },\n  input: {\n    border: \"1px solid #a9a9a9\",\n    borderRadius: 5,\n    width: 300,\n    margin: \"10px 0\",\n    minHeight: 10,\n    padding: 10\n  }\n};\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/Users/mr.hern/Desktop/front-end/react-frontend/src/Components/pages/Reviews.js"],"names":["axios","React","useState","useEffect","useParams","Button","FaStar","colors","orange","grey","Reviews","restaurantId","title","setTitle","review","setReview","revId","setRevId","userData","JSON","parse","localStorage","getItem","restaurant","setRestaurant","console","log","get","then","res","data","headers","Authorization","token","reviewData","_id","save","req","restaurantName","name","put","post","deleteReview","delete","styles","container","e","target","value","textarea","button","display","flexDirection","alignItems","border","borderRadius","width","margin","minHeight","padding","input"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n// import Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { FaStar } from \"react-icons/fa\";\n\n// import { useState } from \"react/cjs/react.development\";\n\nconst colors = {\n  orange: \"#FFBA5A\",\n  grey: \"#a9a9a9\",\n};\n\n// import Newres from \"./Newres\";\n// import { Component } from \"react\";\n\nfunction Reviews() {\n  // const [reviewData, setreviewData] = useState([]);\n  //   const [data, setData] = useState([]);\n  const { restaurantId } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [review, setReview] = useState(\"\");\n  // const [rating, setRating] = useState(\"\");\n  const [revId, setRevId] = useState(\"\");\n const userData = JSON.parse(localStorage.getItem(\"mytoken\"))\n const [restaurant, setRestaurant] = useState([]);\n\n//  const stars = Array(5).fill(0);\n//  const [currentValue, setCurrentValue] = useState(0);\n//  const [hoverValue, setHoverValue] = useState(undefined);\n//  //DELETE REVIEW\n//  // const [reviews, setReviews] = useState('');\n\n//  const handleClick = (value) => {\n//    setCurrentValue(value);\n//  };\n\n//  const handleMouseOver = (value) => {\n//    setHoverValue(value);\n//  };\n\n//  const handleMouseLeave = () => {\n//    setHoverValue(undefined);\n//  };\n  // const [restaurantId, setRestaurantId] = useState(\"\")\n\n//   const token ='mytoken'\nconsole.log(revId);\n\n  useEffect(() => {\n    axios\n    .get(`http://localhost:5000/restaurant/${restaurantId}`)\n    .then((res) => {\n      setRestaurant(res.data.data);\n      })\n\n    axios.get(`http://localhost:5000/review/singlereview/${restaurantId}`\n    ,{\n      headers: {\n        Authorization: `${userData.token}`\n      }\n    }\n    ).then((res) => { //Restaurant ID\n  \n      console.log(restaurantId); \n      if (res.data.reviewData) {\n        setTitle(res.data.reviewData.title);\n        setReview(res.data.reviewData.review);\n        // setRating(res.data.reviewData.rating);\n        setRevId(res.data.reviewData._id);\n        // setRestaurantId(res.data.reviewData[0]._id);\n          console.log(res.data.reviewData);\n      }\n     \n      // axios.get(`http://localhost:5000/review/${restaurantId}`).then((res) => { //Restaurant ID\n      // console.log(res);\n\n\n\n//       if (res) { // review exist\n//  //   setData(res.data.reviewData[0]);\n//  setTitle(res.data.reviewData[0].title);\n//  setReview(res.data.reviewData[0].review);\n//  setRevId(res.data.reviewData[0]._id);\n//  // setRestaurantId(res.data.reviewData[0]._id);\n//    console.log(res.data.reviewData);\n//       } else {\n//       //   // review not exist yet\n//       }\n\n   \n      \n    });\n  }, [restaurantId]);\n\n  const save = () => {\n    //   console.log(data);\nif (revId) { // review exist\n  const req = {\n    review: review, \n    title: title,\n    restaurantName: restaurant.name,\n\n    // rating: rating\n  };\n  axios.put(`http://localhost:5000/review/updateReview/${revId}`,req,{\n    headers: {\n      Authorization: `${userData.token}`\n    }\n  } ) //Review ID\n} else { // review not exist, we are creating one\n  const req = {\n    review: review, \n    title: title,\n    restaurantName: restaurant.name,\n    // rating: rating,\n    restaurantId: restaurantId,\n  };\n  axios.post(`http://localhost:5000/review/addNewReview`,req,{\n    headers: {\n      Authorization: `${userData.token}`\n    } \n  } \n   ) \n\n}\n\n  } \n\n  const deleteReview = () => {\n    axios.delete(`http://localhost:5000/review/delete/${revId}`,{\n      headers: {\n        Authorization: `${userData.token}`\n      }\n    } )\n  \n  } // Todo Message \"hey deleted \" Links to restaurant. \n \n  // const currentRe = data[0].reviews.map((data, id ) => (\n  //   <li key={id}>\n\n  //     <h3>{data.review}</h3>\n      \n  //   </li>\n    \n\n  // ));\n  \n\n//   return (\n//     <div>\n//       <form>\n//         <Card style={{ width: \"18rem\" }}>\n//           <Card.Body>\n//             <Card.Title>\n             \n//             </Card.Title>\n//             <Card.Text>\n//               {title}\n//               <br />\n//               <textarea\n//                 value={title}\n//                 onChange={(e) => setTitle(e.target.value)}\n//               />\n//             </Card.Text>\n//             <textarea\n//               value={review}\n//               onChange={(e) => setReview(e.target.value)}\n//             />\n//             <Button type=\"button\" onClick={save} variant=\"primary\">\n//               Save Review\n//             </Button>\n//             <Button type=\"button\" onClick={deleteReview} className=\"btn-dangerous\" variant=\"primary\">\n//            Delete Review\n//             </Button>\n//           </Card.Body>\n//         </Card>\n//       </form>\n//     </div>\n//   );\n// }\n\n\n\nreturn (\n  <div style={styles.container}>\n    <br/>\n    <h2>Don't be shy... Leave a review!</h2>\n    <h3>{restaurant.name}</h3>\n    {/* <div style={styles.stars}>\n      {stars.map((_, index) => {\n        return (\n          <FaStar\n            // key={index}\n            // size={24}\n            // style={{\n            //   marginRight: 10,\n            //   cursor: \"pointer\",\n            // }}\n            // color={\n            //   (hoverValue || currentValue) > index\n            //     ? colors.orange\n            //     : colors.grey\n            // }\n            // onClick={() => handleClick(index + 1)}\n            // onMouseOver={() => handleMouseOver(index + 1)}\n            // onMouseLeave={handleMouseLeave}\n          />\n        );\n      })}\n    </div> */}\n      {/* <input value={title} placeholder=\"Name\" onChange={(e) => setTitle(e.target.value)} style={styles.input}></input> */}\n    \n\n\n\n\n\n    <textarea value={review} placeholder=\"Review\" onChange={(e) => setReview(e.target.value)} style={styles.textarea} />\n    <Button onClick={save} alert=\"Thank you!\" style={styles.button}>Submit</Button>\n    <Button onClick={deleteReview} variant=\"dark\" style={styles.button}>Delete</Button>\n  </div>\n);\n}\n\nconst styles = {\ncontainer: {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  \n},\ntextarea: {\n  border: \"1px solid #a9a9a9\",\n  borderRadius: 5,\n  width: 300,\n  margin: \"20px 0\",\n  minHeight: 100,\n  padding: 10\n},\nbutton: {\n  border: \"1px solid #a9a9a9\",\n  borderRadius: 5,\n  width: 300,\n  padding: 10\n},\ninput: {\n  border: \"1px solid #a9a9a9\",\n  borderRadius: 5,\n  width: 300,\n  margin: \"10px 0\",\n  minHeight: 10,\n  padding: 10\n}\n};\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}