{"ast":null,"code":"var _jsxFileName = \"/Users/mr.hern/Desktop/front-end/react-frontend/src/Components/pages/Restaurants.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from \"react-router-dom\"; // import Newres from \"./Newres\";\n// import { Component } from \"react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurants() {\n  _s();\n\n  // const [reviewData, setreviewData] = useState([]);\n  const [data, setData] = useState([]); //console.log(data)\n\n  const {\n    restaurantName\n  } = useParams();\n  const [restId, setRestId] = useState(\"\"); //console.log(restId)\n\n  const [reviewData, setReviewData] = useState([]); //console.log(reviewData);\n\n  const loadData = async function getfbProfile(token) {\n    try {\n      const user = await axios.get(`http://localhost:5000/restaurant/${restaurantName}`).then(res => {\n        console.log(res);\n        setData(res.data.data);\n        setRestId(res.data.data._id);\n      }); // axios.get(`http://localhost:5000/review/review/${restId}`).then((reviewDataFound)=>{\n      //   console.log(reviewDataFound);\n      //   setReviewData(reviewDataFound.data.reviewData)\n      // })\n      // const pages = Promise.all(user.data.accounts.data.map(({ id }) => axios.get(`https://graph.facebook.com/${id}`, {\n      //   params: {\n      //     access_token: token,\n      //     fields: 'picture,name',\n      //   },\n      // })));\n      // const fbProfile = await Promise.all([user, pages]);\n      // debug(fbProfile);\n    } catch (err) {// debug(err.stack);\n    }\n  };\n\n  useEffect(() => {\n    //console.log(restaurantName);\n    loadData();\n  }, [restaurantName]); // const resData = JSON.parse(localStorage.getItem(\"restourantData\"));\n  // console.log(resData.restaurants)\n  // // setreviewData(resData.restaurants)\n  // setData(resData.restaurants)\n  //   }, []);\n  //   if (!data) return null;\n  // const currentRestaurants = data.map((rest, id) =>  (\n  //   <ul key={id}>\n  //     \"{rest.name}\"\n  //     {rest.hours}\n  //     {rest.location}\n  //     {rest.rating}\n  //   </ul>\n  // ));\n  // const currentReviews = data[0].reviews.map((rest, id ) => (\n  //   <li key={id}>\n  //         <h1>{rest.name}</h1>\n  //   <h1>{rest.username}</h1>\n  //     <h1>{rest.review}</h1>\n  //   </li>\n  // ));\n  // const currentRe = data[0].reviews.map((data, id ) => (\n  //   <li key={id}>\n  //     <h3>{data.review}</h3>\n  //   </li>\n  // ));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: \"https://nightlife.ng/wp-content/uploads/2020/08/9540978_bardanfo_jpeg273c8b91416e05bf0daee14b46a8c03e.jpg\",\n        style: {\n          width: \"18rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 7\n          }, this), \"Hours \", data.hours, \" a day\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Address: \", data.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Rating \", data.rating, \" stars\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          variant: \"primary\",\n          children: \"Add a review?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 1\n    }, this), reviewData.map((review, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: review.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: review.review\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/reviews/${review._id}`,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 5\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Restaurants, \"Z6R44u0OgxaX4ctnick6aTxegyc=\", false, function () {\n  return [useParams];\n});\n\n_c = Restaurants;\nexport default Restaurants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"sources":["/Users/mr.hern/Desktop/front-end/react-frontend/src/Components/pages/Restaurants.js"],"names":["axios","React","useState","useEffect","useParams","Card","Button","Link","Restaurants","data","setData","restaurantName","restId","setRestId","reviewData","setReviewData","loadData","getfbProfile","token","user","get","then","res","console","log","_id","err","width","name","hours","location","rating","map","review","id","title"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport { Link } from \"react-router-dom\";\n\n// import Newres from \"./Newres\";\n// import { Component } from \"react\";\n\n\n\nfunction Restaurants() {\n  // const [reviewData, setreviewData] = useState([]);\n  const [data, setData] = useState([]);\n  //console.log(data)\n  const { restaurantName } = useParams()\n  const [restId, setRestId] = useState(\"\")\n  //console.log(restId)\n  const [reviewData, setReviewData] = useState([])\n  //console.log(reviewData);\n  \n  const loadData = async function getfbProfile(token) {\n    try {\n      const user = await axios.get(`http://localhost:5000/restaurant/${restaurantName}`).then((res) => {\n        console.log(res);\n        setData(res.data.data);\n        setRestId(res.data.data._id)\n      \n      });\n\n      // axios.get(`http://localhost:5000/review/review/${restId}`).then((reviewDataFound)=>{\n      //   console.log(reviewDataFound);\n      //   setReviewData(reviewDataFound.data.reviewData)\n      // })\n\n\n      // const pages = Promise.all(user.data.accounts.data.map(({ id }) => axios.get(`https://graph.facebook.com/${id}`, {\n      //   params: {\n      //     access_token: token,\n      //     fields: 'picture,name',\n      //   },\n      // })));\n      // const fbProfile = await Promise.all([user, pages]);\n      // debug(fbProfile);\n    } catch (err) {\n      // debug(err.stack);\n    }\n  }\n\n  useEffect(() => {\n    //console.log(restaurantName);\n    \n    loadData();\n\n   \n  }, [restaurantName]);\n\n// const resData = JSON.parse(localStorage.getItem(\"restourantData\"));\n// console.log(resData.restaurants)\n// // setreviewData(resData.restaurants)\n// setData(resData.restaurants)\n//   }, []);\n\n  \n\n//   if (!data) return null;\n \n  // const currentRestaurants = data.map((rest, id) =>  (\n  //   <ul key={id}>\n    \n  //     \"{rest.name}\"\n  //     {rest.hours}\n  //     {rest.location}\n  //     {rest.rating}\n  //   </ul>\n  // ));\n\n  // const currentReviews = data[0].reviews.map((rest, id ) => (\n  //   <li key={id}>\n  //         <h1>{rest.name}</h1>\n  //   <h1>{rest.username}</h1>\n  //     <h1>{rest.review}</h1>\n      \n  //   </li>\n  // ));\n\n  // const currentRe = data[0].reviews.map((data, id ) => (\n  //   <li key={id}>\n\n  //     <h3>{data.review}</h3>\n      \n  //   </li>\n    \n\n  // ));\n  \n\n  return (\n\n    <div > \n  \n<Card style={{ width: '18rem' }}>\n  <Card.Img variant=\"top\" src=\"https://nightlife.ng/wp-content/uploads/2020/08/9540978_bardanfo_jpeg273c8b91416e05bf0daee14b46a8c03e.jpg\" style={{ width: \"18rem\"}} />\n  <Card.Body>\n    <Card.Title></Card.Title>\n    <Card.Text>\n      \n     <h2>{data.name}</h2> \n      <br/>\n    Hours {data.hours} a day\n    </Card.Text>\n    <Card.Text>\n    Address: {data.location}\n    </Card.Text>\n    <Card.Text>\n   Rating {data.rating} stars\n    </Card.Text>\n    \n    {/* {{Newres}}  */}\n    <Button type =\"button\"   variant=\"primary\">Add a review?</Button>\n  </Card.Body>\n\n  {/* {reviewData.map((review, id)=>{\n  return (\n    <div>\n    <h3>{review.title}</h3>\n    <h5>{review.review}</h5>\n    <Link to={`/Reviews/${review._id}`}>Edit</Link>\n    </div>\n  )\n})} */}\n  \n</Card>\n\n\n{reviewData.map((review, id)=>{\n  return (\n    <div key={id}>\n    <h3>{review.title}</h3>\n    <h5>{review.review}</h5>\n    <Link to={`/reviews/${review._id}`}>Edit</Link>\n    </div>\n  )\n})}\n\n</div>\n  );\n}\nexport default Restaurants;\n\n\n"]},"metadata":{},"sourceType":"module"}