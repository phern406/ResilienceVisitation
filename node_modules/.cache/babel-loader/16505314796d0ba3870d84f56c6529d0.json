{"ast":null,"code":"var _jsxFileName = \"/Users/mr.hern/Desktop/front-end/react-frontend/src/Components/pages/Reviews.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\"; // import Newres from \"./Newres\";\n// import { Component } from \"react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Reviews() {\n  _s();\n\n  // const [reviewData, setreviewData] = useState([]);\n  //   const [data, setData] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [review, setReview] = useState(\"\");\n  const [revId, setRevId] = useState(\"\"); //   const token ='mytoken'\n  // console.log(revId);\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/review/review/617e82a3eaffff441598afd7`).then(res => {\n      //Restaurant ID\n      // console.log(res);\n      //   setData(res.data.reviewData[0]);\n      setTitle(res.data.reviewData[0].title);\n      setReview(res.data.reviewData[0].review);\n      setRevId(res.data.reviewData[0]._id);\n      console.log(res.data.reviewData);\n    });\n  }, []);\n\n  const edit = () => {\n    //   console.log(data);\n    const req = {\n      review: review,\n      title: title\n    };\n    axios.put(`http://localhost:5000/review/updateReview/61853129f0503bc8655c0df9`, req); //Review ID\n  }; // const currentRe = data[0].reviews.map((data, id ) => (\n  //   <li key={id}>\n  //     <h3>{data.review}</h3>\n  //   </li>\n  // ));\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: \"18rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: title,\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: review,\n            onChange: e => setReview(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: edit,\n            variant: \"primary\",\n            children: \"Edit review?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reviews, \"qTGCdn8BGycpVYFxKfG7Hd+BCRw=\");\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/Users/mr.hern/Desktop/front-end/react-frontend/src/Components/pages/Reviews.js"],"names":["axios","React","useState","useEffect","Card","Button","Reviews","title","setTitle","review","setReview","revId","setRevId","get","then","res","data","reviewData","_id","console","log","edit","req","put","width","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CACA;AACA;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB;AACA;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC,CANiB,CAOnB;AACA;;AAEEC,EAAAA,SAAS,CAAC,MAAM;AAEdH,IAAAA,KAAK,CAACa,GAAN,CAAW,8DAAX,EAA0EC,IAA1E,CAAgFC,GAAD,IAAS;AAAE;AACxF;AACF;AACAP,MAAAA,QAAQ,CAACO,GAAG,CAACC,IAAJ,CAASC,UAAT,CAAoB,CAApB,EAAuBV,KAAxB,CAAR;AACAG,MAAAA,SAAS,CAACK,GAAG,CAACC,IAAJ,CAASC,UAAT,CAAoB,CAApB,EAAuBR,MAAxB,CAAT;AACAG,MAAAA,QAAQ,CAACG,GAAG,CAACC,IAAJ,CAASC,UAAT,CAAoB,CAApB,EAAuBC,GAAxB,CAAR;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,IAAJ,CAASC,UAArB;AAED,KARD;AASD,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMI,IAAI,GAAG,MAAM;AACjB;AACE,UAAMC,GAAG,GAAG;AACVb,MAAAA,MAAM,EAAEA,MADE;AAEVF,MAAAA,KAAK,EAAEA;AAFG,KAAZ;AAIAP,IAAAA,KAAK,CAACuB,GAAN,CAAW,oEAAX,EAA+ED,GAA/E,EANe,CAMsE;AACxF,GAPD,CAvBiB,CAgCjB;AACA;AAEA;AAEA;AAGA;;;AAGA,sBACE;AAAA,2BACE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA,+BACE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD,CAAM,IAAN;AAAA,uBACGjB,KADH,eAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AACE,cAAA,KAAK,EAAEA,KADT;AAEE,cAAA,QAAQ,EAAGkB,CAAD,IAAOjB,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAF3B;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAYE;AACE,YAAA,KAAK,EAAElB,MADT;AAEE,YAAA,QAAQ,EAAGgB,CAAD,IAAOf,SAAS,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAF5B;AAAA;AAAA;AAAA;AAAA,kBAZF,eAgBE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAEN,IAA/B;AAAqC,YAAA,OAAO,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAvEQf,O;;KAAAA,O;AAwET,eAAeA,OAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n// import Newres from \"./Newres\";\n// import { Component } from \"react\";\n\nfunction Reviews() {\n  // const [reviewData, setreviewData] = useState([]);\n  //   const [data, setData] = useState([]);\n\n  const [title, setTitle] = useState(\"\");\n  const [review, setReview] = useState(\"\");\n  const [revId, setRevId] = useState(\"\");\n//   const token ='mytoken'\n// console.log(revId);\n\n  useEffect(() => {\n\n    axios.get(`http://localhost:5000/review/review/617e82a3eaffff441598afd7`).then((res) => { //Restaurant ID\n      // console.log(res);\n    //   setData(res.data.reviewData[0]);\n    setTitle(res.data.reviewData[0].title);\n    setReview(res.data.reviewData[0].review);\n    setRevId(res.data.reviewData[0]._id);\n      console.log(res.data.reviewData);\n      \n    });\n  }, []);\n\n  const edit = () => {\n    //   console.log(data);\n      const req = {\n        review: review, \n        title: title\n      };\n      axios.put(`http://localhost:5000/review/updateReview/61853129f0503bc8655c0df9`,req ) //Review ID\n  } \n \n  // const currentRe = data[0].reviews.map((data, id ) => (\n  //   <li key={id}>\n\n  //     <h3>{data.review}</h3>\n      \n  //   </li>\n    \n\n  // ));\n  \n\n  return (\n    <div>\n      <form>\n        <Card style={{ width: \"18rem\" }}>\n          <Card.Body>\n            <Card.Title>\n              <h1></h1>\n            </Card.Title>\n            <Card.Text>\n              {title}\n              <br />\n              <textarea\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Card.Text>\n            <textarea\n              value={review}\n              onChange={(e) => setReview(e.target.value)}\n            />\n            <Button type=\"button\" onClick={edit} variant=\"primary\">\n              Edit review?\n            </Button>\n          </Card.Body>\n        </Card>\n      </form>\n    </div>\n  );\n}\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}