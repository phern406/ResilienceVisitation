{"ast":null,"code":"var _jsxFileName = \"/Users/mr.hern/Desktop/front-end/react-frontend/src/Components/pages/Reviews.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\"; // import Newres from \"./Newres\";\n// import { Component } from \"react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Reviews() {\n  _s();\n\n  // const [reviewData, setreviewData] = useState([]);\n  //   const [data, setData] = useState([]);\n  const {\n    restaurantId\n  } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [review, setReview] = useState(\"\");\n  const [revId, setRevId] = useState(\"\");\n  const userData = JSON.parse(localStorage.getItem(\"mytoken\")); // const [restaurantId, setRestaurantId] = useState(\"\")\n  //   const token ='mytoken'\n\n  console.log(revId);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/review/singlereview/${restaurantId}`, {\n      headers: {\n        Authorization: `${userData.token}`\n      }\n    }).then(res => {\n      //Restaurant ID\n      console.log(restaurantId);\n\n      if (res.data.reviewData) {\n        setTitle(res.data.reviewData.title);\n        setReview(res.data.reviewData.review);\n        setRevId(res.data.reviewData._id); // setRestaurantId(res.data.reviewData[0]._id);\n\n        console.log(res.data.reviewData);\n      } // axios.get(`http://localhost:5000/review/${restaurantId}`).then((res) => { //Restaurant ID\n      // console.log(res);\n      //       if (res) { // review exist\n      //  //   setData(res.data.reviewData[0]);\n      //  setTitle(res.data.reviewData[0].title);\n      //  setReview(res.data.reviewData[0].review);\n      //  setRevId(res.data.reviewData[0]._id);\n      //  // setRestaurantId(res.data.reviewData[0]._id);\n      //    console.log(res.data.reviewData);\n      //       } else {\n      //       //   // review not exist yet\n      //       }\n\n    });\n  }, []);\n\n  const save = () => {\n    //   console.log(data);\n    if (revId) {\n      // review exist\n      const req = {\n        review: review,\n        title: title\n      };\n      axios.put(`http://localhost:5000/review/updateReview/${revId}`, req, {\n        headers: {\n          Authorization: `${userData.token}`\n        }\n      }); //Review ID\n    } else {\n      // review not exist, we are creating one\n      const req = {\n        review: review,\n        title: title,\n        restaurantId: restaurantId\n      };\n      axios.post(`http://localhost:5000/review/addNewReview`, req, {\n        headers: {\n          Authorization: `${userData.token}`\n        }\n      }); // TODO send post to server to addReview route\n    }\n  }; // const currentRe = data[0].reviews.map((data, id ) => (\n  //   <li key={id}>\n  //     <h3>{data.review}</h3>\n  //   </li>\n  // ));\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: \"18rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: title,\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: review,\n            onChange: e => setReview(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: save,\n            variant: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: save,\n            variant: \"primary\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reviews, \"eQJUxpklkDp7gNGMYL7tv98w84M=\", false, function () {\n  return [useParams];\n});\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/Users/mr.hern/Desktop/front-end/react-frontend/src/Components/pages/Reviews.js"],"names":["axios","React","useState","useEffect","useParams","Card","Button","Reviews","restaurantId","title","setTitle","review","setReview","revId","setRevId","userData","JSON","parse","localStorage","getItem","console","log","get","headers","Authorization","token","then","res","data","reviewData","_id","save","req","put","post","width","e","target","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n// import Newres from \"./Newres\";\n// import { Component } from \"react\";\n\nfunction Reviews() {\n  // const [reviewData, setreviewData] = useState([]);\n  //   const [data, setData] = useState([]);\n  const { restaurantId } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [review, setReview] = useState(\"\");\n  const [revId, setRevId] = useState(\"\");\n const userData = JSON.parse(localStorage.getItem(\"mytoken\"))\n  // const [restaurantId, setRestaurantId] = useState(\"\")\n\n//   const token ='mytoken'\nconsole.log(revId);\n\n  useEffect(() => {\n  \n    axios.get(`http://localhost:5000/review/singlereview/${restaurantId}`\n    ,{\n      headers: {\n        Authorization: `${userData.token}`\n      }\n    }\n    ).then((res) => { //Restaurant ID\n  \n      console.log(restaurantId); \n      if (res.data.reviewData) {\n        setTitle(res.data.reviewData.title);\n        setReview(res.data.reviewData.review);\n        setRevId(res.data.reviewData._id);\n        // setRestaurantId(res.data.reviewData[0]._id);\n          console.log(res.data.reviewData);\n      }\n     \n      // axios.get(`http://localhost:5000/review/${restaurantId}`).then((res) => { //Restaurant ID\n      // console.log(res);\n\n\n\n//       if (res) { // review exist\n//  //   setData(res.data.reviewData[0]);\n//  setTitle(res.data.reviewData[0].title);\n//  setReview(res.data.reviewData[0].review);\n//  setRevId(res.data.reviewData[0]._id);\n//  // setRestaurantId(res.data.reviewData[0]._id);\n//    console.log(res.data.reviewData);\n//       } else {\n//       //   // review not exist yet\n//       }\n\n   \n      \n    });\n  }, []);\n\n  const save = () => {\n    //   console.log(data);\nif (revId) { // review exist\n  const req = {\n    review: review, \n    title: title\n  };\n  axios.put(`http://localhost:5000/review/updateReview/${revId}`,req,{\n    headers: {\n      Authorization: `${userData.token}`\n    }\n  } ) //Review ID\n} else { // review not exist, we are creating one\n  const req = {\n    review: review, \n    title: title,\n    restaurantId: restaurantId,\n  };\n  axios.post(`http://localhost:5000/review/addNewReview`,req,{\n    headers: {\n      Authorization: `${userData.token}`\n    }\n  } )\n\n  // TODO send post to server to addReview route\n\n}\n\n  } \n \n  // const currentRe = data[0].reviews.map((data, id ) => (\n  //   <li key={id}>\n\n  //     <h3>{data.review}</h3>\n      \n  //   </li>\n    \n\n  // ));\n  \n\n  return (\n    <div>\n      <form>\n        <Card style={{ width: \"18rem\" }}>\n          <Card.Body>\n            <Card.Title>\n             \n            </Card.Title>\n            <Card.Text>\n              {title}\n              <br />\n              <textarea\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Card.Text>\n            <textarea\n              value={review}\n              onChange={(e) => setReview(e.target.value)}\n            />\n            <Button type=\"button\" onClick={save} variant=\"primary\">\n              Save\n            </Button>\n            <Button type=\"button\" onClick={save} variant=\"primary\">\n           Delete\n            </Button>\n          </Card.Body>\n        </Card>\n      </form>\n    </div>\n  );\n}\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}